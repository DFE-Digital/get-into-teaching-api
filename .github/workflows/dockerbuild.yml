name: Build and Deploy 
on:
  repository_dispatch:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  push:
    branches:
      - master

env:
  DOCKERHUB_REPOSITORY:     dfedigital/get-into-teaching-api
  
jobs:
  build_docker:
    name: Build and push to DockerHub
    runs-on: ubuntu-latest
    outputs:
       image: ${{steps.docker_image.outputs.IMAGE}}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Get Short SHA
        id: vars
        run: |
             echo ::set-output name=sha_short::$(echo $GITHUB_SHA | cut -c -7)
             if [ ${{github.ref}} == 'refs/heads/master' ]
             then
             echo ::set-output name=push::true
             else
             echo ::set-output name=push::false
             fi

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
             ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ steps.vars.outputs.push }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
                 ${{env.DOCKERHUB_REPOSITORY}}:sha-${{ steps.vars.outputs.sha_short }}
          build-args: GIT_COMMIT_SHA=${{ steps.vars.outputs.sha_short }}

      - name: Trigger Development Deployment
        if: github.ref == 'refs/heads/master'
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy to PaaS
          token: ${{ secrets.ACTIONS_API_ACCESS_TOKEN }}
          inputs: '{"environment": "Development", "sha": "${{ github.sha }}"}'

       - name: Slack Notification
         if: failure() && github.ref == 'refs/heads/master'
         uses: rtCamp/action-slack-notify@master
         env:
           SLACK_CHANNEL: getintoteaching_tech
           SLACK_COLOR: '#3278BD'
           SLACK_ICON: https://github.com/rtCamp.png?size=48
           SLACK_MESSAGE: 'The API Application has failed to Build the MASTER branch'
           SLACK_TITLE: 'API Workflow Build Failure'
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


