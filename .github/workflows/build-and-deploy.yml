name: Build and Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        type: choice
        default: development_aks
        options:
        - development_aks
        - test_aks
        - production_aks

jobs:
  build:
    name: Build and push to Github Container Registry
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      image: ${{steps.docker_image.outputs.IMAGE}}
      image_tag_sha: "sha-${{ steps.vars.outputs.sha_short }}"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Slack Webhook from KV
        uses: azure/CLI@v1
        id: fetch-slack-webhook
        with:
          inlineScript: |
            SECRET_VALUE=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name "${{ secrets.INFRA_KEY_VAULT}}" --query "value" -o tsv)
            echo "SLACK-WEBHOOK=$SECRET_VALUE" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: v0.9.1

      - name: Get Short SHA
        id: vars
        run: |
          echo "sha_short=$(echo $GITHUB_SHA | cut -c -7)" >> $GITHUB_OUTPUT

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.ref == 'refs/heads/master' }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ${{env.DOCKER_REPOSITORY}}:sha-${{ steps.vars.outputs.sha_short }}
          build-args: GIT_COMMIT_SHA=${{ steps.vars.outputs.sha_short }}

      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_FAILURE}}
          SLACK_MESSAGE: 'The pipeline has failed to build the API image'
          SLACK_TITLE: 'Failure to Build API '
          SLACK_WEBHOOK: "${{ steps.fetch-slack-webhook.outputs.SLACK-WEBHOOK }}"

  development:
    name: Development Deployment
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment:
      name: development_aks
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Slack Webhook from KV
        uses: azure/CLI@v1
        id: fetch-slack-webhook
        with:
          inlineScript: |
            SECRET_VALUE=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name "${{ secrets.INFRA_KEY_VAULT}}" --query "value" -o tsv)
            echo "SLACK-WEBHOOK=$SECRET_VALUE" >> $GITHUB_OUTPUT

      - name: Trigger Development Deployment
        uses: ./.github/workflows/actions/deploy_v2
        id: deploy
        with:
          environment: development_aks
          sha: ${{needs.build.outputs.image_tag_sha}}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_FAILURE}}
          SLACK_MESSAGE: 'TEST MESSAGE'
          SLACK_TITLE: 'TEST SLACK TITLE GIT API'
          SLACK_WEBHOOK: '${{ steps.fetch-slack-webhook.outputs.SLACK-WEBHOOK }}'

  test:
    name: Test Deployment
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment:
      name: test_aks
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Slack Webhook from KV
        uses: azure/CLI@v1
        id: fetch-slack-webhook
        with:
          inlineScript: |
            SECRET_VALUE=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name "${{ secrets.INFRA_KEY_VAULT}}" --query "value" -o tsv)
            echo "SLACK-WEBHOOK=$SECRET_VALUE" >> $GITHUB_OUTPUT

      - name: Trigger Test Deployment
        uses: ./.github/workflows/actions/deploy_v2
        id: deploy
        with:
          environment: test_aks
          sha: ${{needs.build.outputs.image_tag_sha}}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_FAILURE}}
          SLACK_MESSAGE: 'The pipeline has failed to build the API image'
          SLACK_TITLE: 'Failure to Build API '
          SLACK_WEBHOOK: "${{ steps.fetch-slack-webhook.outputs.SLACK-WEBHOOK }}"

  production:
    name: Production Deployment
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment:
      name: production_aks
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Slack Webhook from KV
        uses: azure/CLI@v1
        id: fetch-slack-webhook
        with:
          inlineScript: |
            SECRET_VALUE=$(az keyvault secret show --name "SLACK-WEBHOOK" --vault-name "${{ secrets.INFRA_KEY_VAULT}}" --query "value" -o tsv)
            echo "SLACK-WEBHOOK=$SECRET_VALUE" >> $GITHUB_OUTPUT

      - name: Trigger Production  Deployment
        uses: ./.github/workflows/actions/deploy_v2
        id: deploy
        with:
          environment: production_aks
          sha: ${{needs.build.outputs.image_tag_sha}}
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_COLOR: ${{env.SLACK_FAILURE}}
          SLACK_MESSAGE: 'The pipeline has failed to build the API image'
          SLACK_TITLE: 'Failure to Build API '
          SLACK_WEBHOOK: "${{ steps.fetch-slack-webhook.outputs.SLACK-WEBHOOK }}"
