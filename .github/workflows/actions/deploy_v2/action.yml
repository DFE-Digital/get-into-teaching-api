name: Deploy to AKS
description: deploys application
inputs:
  environment:
    description: Environment to deploy to
    required: true
  sha:
    description: Commit sha to be deployed
    required: true
  azure-client-id:
    description: Managed identity client ID
    required: true
  azure-subscription-id:
    description: Azure subscription ID
    required: true
  azure-tenant-id:
    description: Azure tenant ID
    required: true
outputs:
  deploy-url:
    description: "URL of the deployed application"
    value: https://${{ steps.set_env_var.outputs.deploy_url }}
runs:
  using: composite
  steps:
    - name: Set Environment variables
      id: set_env_var
      shell: bash
      run: |
        tf_vars_file=terraform/aks/config/${{ inputs.environment }}.tfvars.json
        terraform_version=$(awk '/{/{f=/^terraform/;next}f' terraform/aks/terraform.tf | grep -o [0-9\.]*)
        cluster=$(jq -r '.cluster' ${tf_vars_file})
        aks_app_environment=$(jq -r '.environment' ${tf_vars_file})
        echo "TERRAFORM_VERSION=$terraform_version" >> $GITHUB_ENV

        if [[ $cluster == 'production' ]]; then
          deploy_url=getintoteachingapi-${aks_app_environment}.teacherservices.cloud
        else
          deploy_url=getintoteachingapi-${aks_app_environment}.${cluster}.teacherservices.cloud
        fi
        echo "deploy_url=${deploy_url}" >> $GITHUB_OUTPUT

    - name: Use Terraform ${{ env.TERRAFORM_VERSION }}
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
      with:
        azure-client-id: ${{ inputs.azure-client-id }}
        azure-tenant-id: ${{ inputs.azure-tenant-id }}
        azure-subscription-id: ${{ inputs.azure-subscription-id }}

    - name: Terraform init, plan & apply
      shell: bash
      run: make ci ${{ inputs.environment }} terraform-apply
      env:
        IMAGE_TAG: ${{ inputs.sha || inputs.SHA }}

    - name: Smoke tests
      shell: bash
      run: |
        tests/confidence/healthcheck.sh "${APP_HOSTNAME}" "${IMAGE_TAG#sha-}"
      env:
        APP_HOSTNAME: ${{ steps.set_env_var.outputs.deploy_url }}
        IMAGE_TAG: ${{ inputs.sha || inputs.SHA }}
