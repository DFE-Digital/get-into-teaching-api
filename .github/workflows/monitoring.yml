---  
name: Release Monitoring ( Development )
on: 
  workflow_dispatch:

env:
  CF_PROVIDER_DIR: $HOME/.terraform.d/plugins/linux_amd64/terraform-provider-cloudfoundry
  CF_PROVIDER_URL: https://github.com/cloudfoundry-community/terraform-provider-cloudfoundry/releases/download/v0.12.3/terraform-provider-cloudfoundry_v0.12.3_linux_amd64

jobs:
  deploy_monitoring:
    name: 'Deploy Monitoring'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:

       - name: Checkout
         uses: actions/checkout@v2
   
       - uses: hashicorp/setup-terraform@v1
         with:
           terraform_version: 0.13.4

       - name: Wait for any previous runs to complete
         uses: softprops/turnstyle@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           continue-after-seconds: 180
      
       - name: Terraform Init
         run: |
             cd terraform/monitoring && pwd
             terraform init -backend-config=dev.bk.vars
         env:
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"
             TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME   }}"
             TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD   }}"
   
       - name: Terraform Plan
         run: |
             cd terraform/monitoring && pwd
             terraform plan -var-file=dev.env.tfvars -out plan
         env:
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"
             TF_VAR_user:              "${{ secrets.GOVUKPAAS_USERNAME   }}"
             TF_VAR_password:          "${{ secrets.GOVUKPAAS_PASSWORD   }}"
             TF_VAR_paas_exporter_username:  "${{ secrets.GOVUKPAAS_USERNAME   }}"
             TF_VAR_paas_exporter_password:  "${{ secrets.GOVUKPAAS_PASSWORD   }}"
             TF_VAR_elasticsearch_user:      "${{ secrets.LOGIT_USERID     }}"
             TF_VAR_elasticsearch_password:  "${{ secrets.LOGIT_PASSWORD   }}"
             TF_VAR_google_client_id:        "${{ secrets.GOOGLE_CLIENT_ID }}"
             TF_VAR_google_client_secret:    "${{ secrets.GOOGLE_CLIENT_SECRET }}"
   
       - name: Terraform Apply
         run: |
             cd terraform/monitoring && pwd
             terraform apply -auto-approve plan
         env:
             ARM_ACCESS_KEY:           "${{ secrets.DEV_ARM_ACCESS_KEY  }}"

       - name: Slack Notification
         if: failure()
         uses: rtCamp/action-slack-notify@master
         env:
           SLACK_CHANNEL: getintoteaching_tech
           SLACK_COLOR: '#3278BD'
           SLACK_ICON: https://github.com/rtCamp.png?size=48
           SLACK_MESSAGE: 'Release Monitoring (Development) FAILED carrying out  ${{github.job}}'
           SLACK_TITLE: 'Failure: ${{ github.workflow }}'
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
               
