name: Run Sonar scanner 
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  push:
    branches: [ master ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: '11'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install NotifyBintray
        run:  dotnet nuget add source --name NotifyBintray https://api.bintray.com/nuget/gov-uk-notify/nuget 

      - name: Install dotnet-sonarscanner
        run:  dotnet tool install --global dotnet-sonarscanner --version 4.8.0

      - name: Install dependencies
        run:  sudo dotnet restore && sudo apt-get update && sudo apt-get install -y libsqlite3-mod-spatialite

      - name: SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"DFE-Digital_get-into-teaching-api" \
            /o:"dfe-digital" \
            /n:"get-into-teaching-api" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cpd.exclusions="GetIntoTeachingApi/Migrations/*.cs" \
            /d:sonar.cs.opencover.reportsPaths="GetIntoTeachingApiTests/coverage.opencover.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/*.trx" \
            /d:sonar.coverage.exclusions="\
                GetIntoTeachingApiTests/**/*,\
                GetIntoTeachingApi/Migrations/*.cs,\
                GetIntoTeachingApi/Adapters/*.cs,\
                GetIntoTeachingApi/Database/GetIntoTeachingDbContextFactory.cs,\
                GetIntoTeachingApi/OperationFilters/AuthOperationFilter.cs,\
                GetIntoTeachingApi/Startup.cs,\
                GetIntoTeachingApi/Program.cs\
            " \
            /d:sonar.verbose=true \
            /d:sonar.log.level="DEBUG"
          sudo dotnet build
            sudo dotnet test --no-build --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_CHANNEL: getintoteaching_tech
           SLACK_COLOR: '#3278BD'
           SLACK_ICON: https://github.com/rtCamp.png?size=48
           SLACK_MESSAGE: ':disappointed_relieved: Pipeline Failure carrying out job ${{github.job}} :disappointed_relieved:'
           SLACK_TITLE: 'Failure: ${{ github.workflow }}'
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

