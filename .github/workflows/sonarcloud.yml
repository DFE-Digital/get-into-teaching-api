name: Run Sonar scanner 
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  push:
    branches: [ master ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
           creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: DFE-Digital/github-actions/keyvault-yaml-secret@master
        id: SONAR-TOKEN
        with:
          keyvault: ${{ secrets.KEY_VAULT}}
          yaml_secret: INFRA-KEYS
          secret: SONAR-TOKEN

      - uses: DFE-Digital/github-actions/keyvault-yaml-secret@master
        id: SLACK-WEBHOOK
        with:
          keyvault: ${{ secrets.KEY_VAULT}}
          yaml_secret: INFRA-KEYS
          secret: SLACK-WEBHOOK

      - name: Install dotnet-sonarscanner
        run:  dotnet tool install --global dotnet-sonarscanner --version 4.8.0

      - name: Install dependencies
        run:  dotnet restore

      - name: Spin Up Stack
        run: docker-compose up -d

      - name: SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"DFE-Digital_get-into-teaching-api" \
            /o:"dfe-digital" \
            /n:"get-into-teaching-api" \
            /d:sonar.login="${{ steps.SONAR-TOKEN.outputs.secret-value }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cpd.exclusions="GetIntoTeachingApi/Migrations/*.cs" \
            /d:sonar.cs.opencover.reportsPaths="GetIntoTeachingApiTests/coverage.opencover.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/*.trx" \
            /d:sonar.coverage.exclusions="\
                GetIntoTeachingApiTests/**/*,\
                GetIntoTeachingApi/Migrations/*.cs,\
                GetIntoTeachingApi/Adapters/*.cs,\
                GetIntoTeachingApi/Database/GetIntoTeachingDbContextFactory.cs,\
                GetIntoTeachingApi/OperationFilters/AuthOperationFilter.cs,\
                GetIntoTeachingApi/Startup.cs,\
                GetIntoTeachingApi/Program.cs\
            " \
            /d:sonar.verbose=true \
            /d:sonar.log.level="DEBUG"
             dotnet build
             dotnet test --no-build --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
             dotnet sonarscanner end /d:sonar.login="${{ steps.SONAR-TOKEN.outputs.secret-value }}"

      - name: Slack Notification
        if: failure() && github.ref == 'refs/heads/master'
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_COLOR:   ${{env.SLACK_FAILURE }}
           SLACK_MESSAGE: Pipeline Failure carrying out job ${{github.job}} 
           SLACK_TITLE:   'Failure: ${{ github.workflow }}'
           SLACK_WEBHOOK: ${{ steps.SLACK-WEBHOOK.outputs.secret-value }}

