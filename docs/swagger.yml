openapi: 3.0.0
info:
  description: |
    Provides a RESTful API for integrating with the Get into Teaching CRM.

    The Get into Teaching (GIT) API sits in front of the GIT CRM, which uses the [Microsoft Dynamics365](https://docs.microsoft.com/en-us/dynamics365/) platform (the [Customer Engagement](https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/overview) module is used for storing Candidate information and the [Marketing](https://docs.microsoft.com/en-us/dynamics365/marketing/developer/using-events-api) module for managing Events).

    The GIT API aims to provide:

    * Simple, task-based RESTful APIs.
    * Message queueing (while the GIT CRM is offline for updates).
    * Validation to ensure consistency across services writing to the GIT CRM.
  version: "1.0.0"
  title: Get into Teaching API
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
tags:
  - name: Candidates
  - name: Privacy Policies
  - name: Teacher Training Adviser
  - name: Mailing List
  - name: Events
  - name: Schools Experience
  - name: Types

paths:
  /candidates/access_tokens:
    post:
      tags:
        - Candidates
      description: Finds a candidate matching at least 3 of the provided CandidateAccessTokenRequest attributes. If a candidate is found, an access token (PIN code) will be sent to the candidate email address that can then be used for verification.
      operationId: createCandidateAccessToken
      responses:
        '204':
          description: NoContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateAccessTokenRequest'

  /privacy_policies/latest:
    get:
      tags:
        - Privacy Policies
      description: Returns the latest PrivacyPolicy.
      operationId: getLatestPrivacyPolicy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivacyPolicy'

  /mailing_list/members:
    post:
      tags:
        - Mailing List
      description: Subscribes the given candidate to the mailing list, creating a new candidate if they do not exist yet.
      operationId: subscribeMailingList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailingListMember'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailingListMember'
              
  /teacher_training_adviser/candidates/{accessToken}:
    get:
      tags:
        - Teacher Training Adviser
      description: Accepts an access tokon (PIN code) and returns the associated TeacherTrainingAdviserCandidate object.
      operationId: getExistingTeacherTrainingAdviserCandidate
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/secret'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherTrainingAdviserCandidate'
              
  /teacher_training_adviser/candidates:
    post:
      tags:
        - Teacher Training Adviser
      description: Upserts a Candidate with the Teacher Training Adviser service, or updates the details of an existing candidate.
      operationId: upsertTeacherTrainingAdviserCandidate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherTrainingAdviserCandidate'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherTrainingAdviserCandidate'
  
  /events/upcoming:
    get:
      tags: 
        - Events
      description: Returns an array of upcoming events, limited to the next 10 events (or by the number given to the `limit` query parameter).
      operationId: getUpcomingEvents
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: The maximum number of results to return - must be less than 25.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
  
  /events/search:
    get:
      tags: 
        - Events
      description: Search for events by postcode, optionally limiting the results by distance and type of event.
      operationId: searchEvents
      parameters:
        - in: query
          required: true
          name: postcode
          schema:
            type: string
          description: The postcode to center the event search around.
        - in: query
          name: distance
          schema:
            type: integer
          description: The distance in miles from the postcode to limit search results. Omit this parameter to return nationwide results.
        - in: query
          name: type
          schema:
            type: integer
          description: Restrict the events to a particular type (this value must match the `eventType` attribute of the `Event` schema).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
                  
  /events/{readableEventId}:
    get:
      tags: 
        - Events
      description: Returns a specific event.
      operationId: getEvent
      parameters:
        - in: path
          required: true
          name: readableEventId
          schema:
            type: string
          description: The readableEventId of the event to return.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  
  /events/{readableEventId}/attendees:
    post:
      tags: 
        - Events
      description: Creates an attendee for the given event.
      operationId: createEventAttendee
      parameters:
        - in: path
          required: true
          name: readableEventId
          schema:
            type: string
          description: The readableEventId of the event to request attendance for.
      responses:
        '204':
          description: NoContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventAttendanceRequest'
  
  /events:
    post:
      tags: 
        - Events
      description: Creates a new event.
      operationId: createEvent
      responses:
        '204':
          description: NoContent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
  
  /schools_experience/candidates/{accessToken}:
    get:
      tags:
        - Schools Experience
      description: Accepts an access token (PIN code) and returns the associated SchoolsExperienceCandidate object.
      operationId: getExistingSchoolsExperienceCandidate
      parameters:
        - $ref: '#/components/parameters/accessToken'
        - $ref: '#/components/parameters/secret'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolsExperienceCandidate'
              
  /schools_experience/candidates:
    post:
      tags:
        - Schools Experience
      description: Upserts a Candidate with the Schools Experience service, or updates the details of an existing candidate.
      operationId: upsertSchoolsExperienceCandidate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolsExperienceCandidate'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchoolsExperienceCandidate'
    get:
      tags:
        - Schools Experience
      description: Returns candidates matching the given uuids.
      operationId: getSchoolsExperienceCandidates
      parameters:
        - $ref: '#/components/parameters/uuids'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SchoolsExperienceCandidate'
        
  /types/teaching_subjects:
    get:
      tags:
        - Types
      description: Returns the list of teaching subjects.
      operationId: getTeachingSubjectTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'

  /types/countries:
    get:
      tags:
        - Types
      description: Returns the list of countries.
      operationId: getCountryTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'
        
components:
  parameters:
    accessToken:
      in: path
      name: accessToken
      schema:
        type: string
      required: true
      description: Access token (PIN code) to obtain a Candidate record.
    secret:
      in: header
      name: Authorization
      schema:
        type: string
        format: Bearer secret
      required: true
      description: Shared secret identifying the requestor.
    uuids:
      in: query
      name: uuids
      schema:
        type: string
      required: true
      description: Comma separated string of Candidate UUIDs to return.
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
          
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          required:
            - errors
          properties:
            errors:
              type: array
              items:
                type: object
                properties:
                  attribute:
                    type: string
                  message:
                    type: string
                    
    PrivacyPolicy:
      type: object
      required:
        - dfe_policyid
      properties:
        dfe_policyid:
          description: Identifier of the privacy policy.
          type: string
        dfe_privacypolicy:
          description: Text of the privacy policy.
          type: string
                    
    CandidateAccessTokenRequest:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        emailaddress1:
          type: string
          format: email
        birthdate:
          type: string
          format: date
          
    SchoolsExperienceCandidate:
      type: object
      required:
        - firstname
        - lastname
        - birthdate
        - emailaddress1
        - telephone1
        - address1_line1
        - address1_line2
        - address1_line3
        - address1_city
        - address1_stateorprovince
        - address1_postalcode
        - dfe_hasdbscertificate
        - dfe_notesforclassroomexperience
        - dfe_country
        - dfe_preferredteachingsubject01
        - dfe_preferredteachingsubject02
        - privacy_policy
      properties:
        contactid:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
          format: date
        emailaddress1:
          type: string
          format: email
        telephone1:
          type: string
        address1_line1:
          type: string
        address1_line2:
          type: string
        address1_line3:
          type: string
        address1_city:
          type: string
        address1_stateorprovince:
          type: string
        address1_postalcode:
          type: string
        dfe_hasdbscertificate:
          description: Does the candidate have a DBS (Disclosure and Barring Service) certificate?
          type: boolean
        dfe_notesforclassroomexperience:
          description: Notes for the 'Classroom experience' section of the candidate profile.
          type: string
        dfe_country:
          description: Country where the candidate currently lives.
          type: string
        dfe_preferredteachingsubject01:
          description: First teaching subject preference
          type: string
        dfe_preferredteachingsubject02:
          description: Second teaching subject preference
          type: string
        accepted_dfe_policyid:
          description: Identifier of the latest accepted privacy policy.
          type: string
          
    TeacherTrainingAdviserCandidate:
      type: object
      required:
        - firstname
        - lastname
        - birthdate
        - emailaddress1
        - telephone1
        - dfe_preferrededucationphase01
        - dfe_isinuk
        - privacy_policy
        - dfe_degreestatus
        - dfe_candidatepreferredcontacttimeid
        - dfe_preferredday
      properties:
        contactid:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        birthdate:
          type: string
          format: date
        emailaddress1:
          type: string
          format: email
        telephone1:
          type: string
        dfe_preferrededucationphase01:
          description: The preferred education phase that a candidate wishes to teach in (e.g. Primary, Secondary, etc).
          type: string
        dfe_subjecttaught:
          description: The subject the candidate taught in their previous teaching position.
          type: string
        dfe_isinuk:
          description: Indicates if the candidate is based in the UK or overseas.
          type: boolean
        address1_line1:
          type: string
        address1_line2:
          type: string
        address1_line3:
          type: string
        address1_city:
          type: string
        address1_stateorprovince:
          type: string
        address1_postalcode:
          type: string
        accepted_dfe_policyid:
          description: Identifier of the latest accepted privacy policy.
          type: string
        dfe_degreestatus:
          description: Where the candidate is with their degree (e.g. 1st year degree, 2nd year degree, completed etc).
          type: string
        dfe_subject:
          description: The subject the candidate's qualification is in (e.g. Physics, Maths, Art, etc)
        dfe_preferredteachingsubject01:
          description: The candidate's preferred teaching subject (Maths, English, etc).
          type: string
        dfe_ittyear:
          description: The candidate's preferred year of entry.
          type: string
        dfe_candidatepreferredcontacttimeid:
          description: Unique identifier for the candidate's preferred contact time.
          type: string
        dfe_preferredday:
          description: The preferred contact day (e.g. Monday, Tuesday, Weekend, etc).
          type: string
              
    MailingListMember:
      type: object
      required:
        - firstname
        - lastname
        - emailaddress1
      properties:
        firstname:
          type: string
        lastname:
          type: string
        emailaddress1:
          type: string
          format: email
         
    # https://go.microsoft.com/fwlink/?linkid=2042224
    Event:
      type: object
      required:
        - eventName
        - description
        - startDate
        - endDate
        - eventType
        - maxCapacity
        - publicEventUrl
      properties:
        eventId:
          type: string
        readableEventId:
          description: The readable event ID gets used when referencing an event in other API request paths.
          type: string
        eventName:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        eventType:
          description: Type of event (e.g. Online, etc)
          type: integer
        maxCapacity:
          type: integer
        publicEventUrl:
          type: string
          format: url
        building:
          $ref: '#/components/schemas/EventBuilding'
        room:
          $ref: '#/components/schemas/EventRoom'
    
    EventRoom:
      type: object
      required:
        - id
        - description
        - name
        - disabledAccess
      properties:
        id:
          type: string
        description:
          type: string
        name:
          type: string
        disabledAccess:
          type: boolean
    
    EventBuilding:
      type: object
      required:
        - id
        - accessibleToilets
        - disabledAccess
        - disabledParking
        - publicTelephoneAvailable
        - email
        - name
        - wifiAvailable
      properties:
        id:
          type: string
        accessibleToilets:
          type: boolean
        additionalFacilities:
          type: string
        addressComposite:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        country:
          type: string
        postalCode:
          type: string
        description:
          type: string
        disabledAccess:
          type: boolean
        disabledParking:
          type: boolean
        publicTelephoneAvailable:
          type: boolean
        email:
          type: string
        name:
          type: string
        telephone1:
          type: string
        telephone2:
          type: string
        telephone3:
          type: string
        website:
          type: string
        wifiAvailable:
          type: boolean
         
    EventAttendanceRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
          
    Type:
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Unique identifier of this select option.
          type: string
        value:
          description: Value of this select option.
          type: string